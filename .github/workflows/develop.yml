name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - develop  # A pipeline será acionada ao fazer push na branch 'develop'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout o código do repositório
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Configurar o Java 17
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # ou 'adopt' ou 'zulu', depende da sua preferência
          java-version: '21'

      # 3. Build do projeto Spring Boot
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4. Configurar o AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 5. Login no ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # 6. Build da imagem Docker
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest .

      # 7. Push da imagem para o ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
